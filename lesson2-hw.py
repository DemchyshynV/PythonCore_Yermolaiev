"""
#################################################################################
1)написати прогу яка вибирає зі введеної строки цифри і виводить їх через кому,
наприклад:
st = 'as 23 fdfdg544' введена строка
2,3,5,4,4        #вивело в консолі.
#################################################################################
"""
# st = 'as 23 fdfdg544'
#
# result = ''
# for ch in st:
#     if ch.isdecimal():
#         result += ch
# result = ', '.join(result)
# print(result)
"""
#################################################################################
2)написати прогу яка вибирає зі введеної строки числа і виводить їх 
так як вони написані
наприклад:
  st = 'as 23 fdfdg544 34' #введена строка
  23, 544, 34              #вивело в консолі
#################################################################################
"""
st = 'as 23   fdf55dg544 34 34 !!!1!!'
result = ''
for ch in st:
    if ch.isdigit():
        result += ch
    else:
        result += ' '
    # result += ch if ch.isdecimal() else " "
result = ', '.join(result.split())
print(result)

#################################################################################
# 1)есть строка:
# greeting = 'Hello, world'
# записать каждый символ в лист поменяв его на верхний регистр
# пример:
# ['H', 'E', 'L', 'L', 'O', ',', ' ', 'W', 'O', 'R', 'L', 'D']
#################################################################################
greeting = 'Hello, world'

chars = [item.upper() for item in greeting]
print(chars)
#################################################################################
# 2) с диапазона от 0-50 записать в лист только не парные числа, при этом возвести их в квадрат
# пример:
# [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, ...]
#################################################################################
print('____________________________________________')
numbers = [number ** 2 for number in range(50) if number % 2 != 0]
print(numbers)

# - створити функцію яка виводить ліст
l = [1, 2, 3, 4, 5]


def list_func(l):
    for i in range(len(l)):
        print(f'{i} -> {l[i]}')


list_func(l)


#####################################################################################################
# - створити функцію яка приймає три числа та виводить та повертає найменьше.
def get_min(a, b, c):
    res = min(a, b, c)
    print(res)
    return res


min1 = get_min(5, 2, 3)
print(min1)


#####################################################################################################
# - створити функцію яка приймає три числа та виводить та повертає найбільше.
def get_max(a, b, c):
    res = max(a, b, c)
    print(res)
    return res


max1 = get_max(5, 2, 3)
print(max1)


#####################################################################################################
# - створити функцію яка приймає будь-яку кількість чисел, повертає найменьше, а виводить найбільше
def min_max(*args):
    print(max(args))
    return min(args)


min2 = min_max(3, 5, 7)
print(min2)


#####################################################################################################
# - створити функцію яка повертає найбільше число з ліста
def get_max2(l):
    return max(l)


print(get_max2(l))


#####################################################################################################
# - створити функцію яка повертає найменьше число з ліста
def get_min2(l):
    return min(l)


print(get_min2(l))


#####################################################################################################
# - створити функцію яка приймає ліст чисел та складає значення елементів ліста та повертає його.
def get_sum(l):
    return sum(l)


print(get_sum(l))
#####################################################################################################

#####################################################################################################
# - створити функцію яка приймає ліст чисел та повертає середнє арифметичне його значень.
def get_avg(l):
    return sum(l) // len(l)


print(get_avg(l))
#####################################################################################################
"""   
-функція: def pr(): return 'Hello_boss_!!!'
 написати декоратор який замінює нижні підчеркування на пробіли і повертає це значення
"""


def decor(func):
    def wrap():
        return func().replace('_', ' ')

    return wrap


@decor
def pr():
    return 'Hello_boss_!!!'


print(pr())
